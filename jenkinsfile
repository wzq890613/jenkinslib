#!groovy
//引用共享库 Global Pipeline Libraries
@Library('jenkinslib') _ 

//引用共享库文件
def mytools = new org.devops.tools()



//String workspace = "/root/.jenkins/workspace"

pipeline{
    
    agent{
        node{
            label "master"
                //customWorkspace "${workspace}"
        }
    }
    options{
        timestamps()
        skipDefaultCheckout()
        disableConcurrentBuilds()
        timeout(time: 1,unit: "HOURS")
    }
    
    //parameters参数定义     
    parameters {
        string(name: 'canshu', defaultValue: 'Jenkins', description: '描述信息')
        string(name: 'name', defaultValue: 'username', description: '用户名')
        string(name: 'password', defaultValue: 'password', description: 'string类型密码')
        password(name: 'D_CHOICE', defaultValue: '', description: 'password类型密码')
        choice(name: 'build_env', choices: '开发环境\n测试环境\n生产环境\n', description: '请选择构建的环境')
    }
    
    //定义全局变量
    environment {
        harborEnv = "harbor url"
        harborPosswdEnv = "harborPasswd"
        

    }
    
    //tools定义,构建工具maven、ant、gradle,获取通过自动安装或手动放置工具的环境变量。支持maven/jdk/gradle。工具的名称必须在系统设置->全局工具配置中定义。
    tools {
         jdk 'jdk1.8'
        
    }


stages {
    
    stage("GetGode"){
        
        steps{
            timeout(time:5,unit:"MINUTES"){
                script{
                    println("获取代码")
                    println("Hello ${params.canshu}")//使用 parameters参数
                    println("username:${params.name}")
                    println("password:${params.password}")
                    
                    println("${harborEnv}")//引用变量
                    
                    println("password:${params.D_CHOICE}")

                    mytools.PrintMes('this is my lib')
                        
                    sh 'java -version'//使用tools
                     
                    echo "您选择了：${params.build_env}"
                    echo '构建阶段....'
                    
                    //增加maven;maven3 为全局工具中maven 配置 的Name
                    mvnHome = tool "maven3"
                    println(mvnHome)
                    sh "${mvnHome}/bin/mvn --version"
                }
            }
            
            script {
                def browsers = ['ie','chrome','firefox']
                for (int i=0;i<browsers.size();i++){
                    println("${browsers[i]}")
                }
            }
            
        }
        
    }
    
    stage("Build"){
        
        steps{
            timeout(time:20,unit:"MINUTES"){
                script{
                    println("应用打包  ")
                    
                    if (params.build_env == '测试环境') {
                            echo '=====》》》测试环境进行远程发布。'
				        }else if(params.build_env=='生产环境'){
                            echo '=====》》》生产环境进行远程发布。'
			            }else {
                            echo '=====》》》 默认（开发）环境进行远程发布。'
				      }
                }
            }
        }
        
    }
    
    stage("CodeScan"){
        
        steps{
            
            timeout(time:30,unit:"MINUTES"){
                script{
                    print("代码扫描 ")
                }
            }
            
        }
        
    }
    
    
}

post {
    always {
        script{
            println("always")
            
        }
    }
    
    success {
        script{
            currentBuild.description += "\n 构建成功 "
            
            mail subject: "构建完成",
                    body: """
<div id="content">
  <h1>CI报告</h1>
  <div id="sum2">
      <h2>Jenkins 运行结果</h2>
      <ul>
      
	  <li>jenkins的执行结果 : <a>jenkins 执行成功</a></li>
	  <li>jenkins的URL : <a href='${env.BUILD_URL}'>${env.BUILD_URL}</a></li>
	  <li>jenkins的Job名称 : <a id="url_1">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></li>
	  <li>jenkins项目名称 : <a>${env.JOB_NAME}</a></li>
	  <li>parameters参数定义的密码为:${params.D_CHOICE}</li>
      </ul>
  </div>
  <div id="sum0">
  <h2>构建环境信息</h2>
  <ul>
    <li>构建环境为 : <a>${params.build_env}</a></li>
  </ul>
  <h2>GIT 信息</h2>
  <ul>
	<li>GIT项目的地址 : <a></a></li>
	<li>GIT项目当前的分支名 : </li>
	<li>GIT最后一次提交的commitID : </li>
  </ul>
  <h2>MAVEN 信息</h2>
  <ul>
    <li>maven服务路径为 : <a>${mvnHome}</a></li>
  </ul>

  
  </div>
  </div>
		  
             """,
                  
                    
            charset: 'utf-8',
            from: '472954284@qq.com',
            mimeType: 'text/html',
            to: '15261448393@139.com'
        }
    }
    failure {
        script{
            currentBuild.description += "\n 构建失败 "
        }
    }
    
    aborted {
        script{
            currentBuild.description += "\n 构建取消 "
        }
    }
    
    
}

}
